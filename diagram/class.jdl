entity UserAccount {
  id Long
  username String
  password String
  firstName String
  lastName String
  email String
  confirmedEmail Boolean
  phoneNumber String
  imageUrl String
  birthDate Date
  lastLogin Instant
  userType UserType
}

entity UserPreferences_Embeddable {
  weightSystem WeightSystem
  language Language
  currency Currency
  country String
}

enum Currency {
  EURO,
  DOLLAR,
  POUND,
  SWISS_FRANK
}

enum WeightSystem {
  METRIC,
  IMPERIAL
}

enum UserType {
  PRIVATE,
  PERSONAL_TRAINER
}

enum Language {
  PORTUGUESE,
  ENGLISH,
  GERMAN,
  FRENCH,
  SPANISH
}

entity UserHealthProfile {
  gender Gender
  height Integer
  weight BigDecimal
  jobType JobType
}

entity UserHabits_Embeddable {
  isSmoker Boolean
  cigPerDay Integer
  smokeYears Integer
  averageWorkoutsPerWeek Integer
  averageSleepHours BigDecimal
  alcoholGlassesPerWeek Integer

}

entity UserPhysicalCheckupResults_Embeddable {
  testosteroneLevel Integer
  estrogenLevel Integer
  bloodPressure Integer
  restingHeartRate Integer
  hdlCholesterol Integer
  ldlCholesterol Integer
  triglycerides Integer
  fastingBloodSugar Integer
}

enum JobType {
  PHYSICAL_LABOR,
  SEDENTARY
}

enum Gender {
  MALE,
  FEMALE
}

entity FoodNutritionSummary {
  id Long
  name String
  carbs Integer
  fat Integer
  protein Integer
  totalCalories Integer
}

entity FoodNutritionFavorites {
  id Long
  name String
  carbs Integer
  fat Integer
  protein Integer
  lastUpdate Instant
}

entity PhysicalEvaluation {
  id Long
  healthParameter Integer
  value Integer
  lastUpdate Instant
  result Integer
  personalTrainerId Long
}

entity Workout {
  sport String
  place String
  date Date
  weekDay String
  startingWeight BigDecimal
  finishWeight BigDecimal
  type WorkoutType
}

enum WorkoutType {
  Aerobic,
  Anaerobic
}

entity AerobicExercise {
  name String
  distance Integer
  duration Integer
  intensity Integer
  calories Integer
  averageHeartRate Integer
}

entity AnaerobicExercise {
  name String
  muscleGroup String
  sets Integer
  reps Integer
  intensity Integer
  restInterval Integer
  note String
}

entity BodyMeasure {
  machine String
  date Date
  weekDay String
}

entity GeneralAssessment_Embeddable {
  weight BigDecimal
  bodyFat BigDecimal
  muscleMass BigDecimal
  boneMass BigDecimal
  bodyMass BigDecimal
  basalMetabolicRate BigDecimal
  metabolicAge BigDecimal
  totalWater BigDecimal
  visceralFat BigDecimal
}

entity CardiovascularAssessment_Embeddable {
  systolicBloodPressure Integer
  diastolicBloodPressure Integer
  restingHearRate Integer
}

entity BodyPerimetersAssessment_Embeddable {
  neck BigDecimal
  rightArm BigDecimal
  leftArm BigDecimal
  chest BigDecimal
  waist BigDecimal
  hip BigDecimal
  abdominal BigDecimal
  rightThigh BigDecimal
  leftThigh BigDecimal
  rightCalf BigDecimal
  leftCalf BigDecimal
}

entity SkinFoldAssessment_Embeddable {
  triceps BigDecimal
  bicep BigDecimal
  subScapular BigDecimal
  iliocrystal BigDecimal
  surpraespinal BigDecimal
  abdominal BigDecimal
}

entity Meal {
  date Date
  place String
}

entity MealFoodDetails {
  name String
  quantity BigDecimal
  quantityUnit String
  carbs Integer
  fat Integer
  protein Integer
  userFavoritesId Integer
  foodNutritionSummaryId Integer
}

entity ExerciseDefinition {
  name String
  muscleGroups TextBlob
}

entity Goal {
  name String
  exercise String
  goalType GoalType
  timeWindow TimeWindow
  targetValue BigDecimal
  windowNumber Integer
  startDate LocalDate
  finishDate LocalDate
}

enum GoalType {
  VOLUME,
  PR
}

enum TimeWindow {
  WEEK,
  MONTH,
  QUARTER,
  SEMESTER,
  ANNUAL
}

entity PersonalRecord {
  exercise String
  target BigDecimal
  type RecordType
}

enum RecordType {
  LOAD,
  VOLUME,
  DISTANCE,
  SPEED,
  REPS,
  SETS
}

relationship OneToMany {
  UserAccount to FoodNutritionFavorites{user}
  UserAccount to PhysicalEvaluation{user}
  UserAccount to Workout{userId}
  UserAccount to BodyMeasure{userId}
  UserAccount to Meal{userId}
  UserAccount to ExerciseDefinition{userId}
  UserAccount to PersonalRecord{userId}
  UserAccount to Goal{userId}
  Workout to PersonalRecord{workoutId}
  Meal to MealFoodDetails{mealId}
  Workout to AerobicExercise{workoutId}
  Workout to AnaerobicExercise{workoutId}
  ExerciseDefinition to Goal{exerciseDefinitionId}
}

relationship OneToOne {
  UserAccount to UserHealthProfile
  UserHealthProfile to UserHabits_Embeddable
  UserHabits_Embeddable to UserPhysicalCheckupResults_Embeddable
  UserAccount to UserPreferences_Embeddable
  BodyMeasure to GeneralAssessment_Embeddable
  BodyMeasure to CardiovascularAssessment_Embeddable
  BodyMeasure to SkinFoldAssessment_Embeddable
  BodyMeasure to BodyPerimetersAssessment_Embeddable
}
